import { connectorSecretConfig } from "./types/connectorSecretConfig.type";
import { singletonSecretConfig } from "./types/singletonSecretConfig.type";
import { preknownSecretConfig } from "./types/preknownSecretConfig.type";
import { DatabaseType } from "./types/database.type";
/**
 * @param {*} secretsObjects Object containing 2 arrays for connector and preknown secrets and one object for singleton secret
 * @returns array containing secrets and their value from the wanted destenation
 */
export interface getSecretsParams {
    connectors?: connectorSecretConfig[];
    singleton?: singletonSecretConfig;
    preknowns?: preknownSecretConfig[];
    pass019?: boolean;
}
declare function getSecrets<Type>({ connectors, preknowns, singleton, pass019 }: getSecretsParams): Promise<Type | undefined>;
export interface connectorSecret {
    port?: number;
    engine?: DatabaseType;
    dbname?: string;
    username?: string;
    host?: string;
    password?: string;
}
export default getSecrets;
